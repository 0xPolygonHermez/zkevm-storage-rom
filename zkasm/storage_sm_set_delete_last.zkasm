Set_DeleteLast:

    ${GetRKey()} => RKEY

    ; OldValueHash = Hash0( OLD_VALUE_LOW, OLD_VALUE_HIGH )
    ${GetOldValueLow()} => HASH_LEFT
    ${GetOldValueHigh()} => HASH_RIGHT
    $ => HASH_RIGHT                 :HASH0

    ; OldRoot = LeafNodeHash = Hash1( RKey, Hash( VALUE_LOW, VALUE_HIGH ) )
    RKEY => HASH_LEFT
    $ => OLD_ROOT                   :HASH1

    0x0 => VALUE_LOW, VALUE_HIGH, NEW_ROOT

SDL_InitLevel:

    ; Init LEVEL register, and inversely rotate so that after level rotations
    ; the position of LEVEL becomes {1,0,0,0} again
    0x01 => LEVEL

    ; If level bit 0 is 1, then do 1 inverse rotation (i.e. 3 normal rotations)
    ${GetLevelBit(0)}               :JMPZ(SDL_LevelBit1)
                                    :ROTATE_LEVEL
                                    :ROTATE_LEVEL
                                    :ROTATE_LEVEL

SDL_LevelBit1:

    ; If level bit 1 is 1, then do 2 inverse rotations (i.e. 2 normal rotations)
    ${GetLevelBit(1)}               :JMPZ(SDL_LatchSet)
                                    :ROTATE_LEVEL
                                    :ROTATE_LEVEL

SDL_LatchSet:
    
                                    :LATCH_SET              ; At this point consistency is granted: OLD_ROOT, RKEY (complete key), VALUE_LOW, VALUE_HIGH, LEVEL
                                    :JMP(Run)